{"version":3,"sources":["gateway/thirdweb.ts","gateway/unity.ts","App.tsx","index.tsx"],"names":["ThirdWebGateway","signer","this","payload","Promise","resolve","route","loggedIn","Error","bridge","Unity","thirdWeb","w","window","unity","invoke","console","log","ack_id","v4","invokeRoute","JSON","parse","then","result","returnPayload","stringify","unityInstance","SendMessage","App","canvasRef","useRef","useEffect","current","interval","setInterval","createUnityInstance","clearInterval","unityConfig","ref","id","width","height","style","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEaA,EAAb,iDACUC,OAAwB,KADlC,6CAGE,SAAUA,GACRC,KAAKD,OAASA,IAJlB,sBAOE,SAASE,GACP,OAAOC,QAAQC,SAAQ,KAR3B,yBAWE,SAAYC,EAAeH,GACzB,GAAa,uBAAVG,EACD,OAAOJ,KAAKK,SAASJ,GAEvB,MAAM,IAAIK,MAAM,oBAfpB,KCEIC,EAAuB,KAErBC,EAGJ,aAAe,IAAD,gCAFNC,cAEM,EACZT,KAAKS,SAAW,IAAIX,EACpB,IAAMY,EAAKC,OACXD,EAAEE,MAAQ,GACVF,EAAEE,MAAMC,OAAS,SAACT,EAAeH,GAC/Ba,QAAQC,IAAI,gBAAiBX,EAAOH,GACpC,IAAMe,EAASC,cAMf,OALA,EAAKR,SAASS,YAAYd,EAAOe,KAAKC,MAAMnB,IAAUoB,MAAK,SAAAC,GACzDR,QAAQC,IAAI,uBACZ,IAAMQ,EAAgBJ,KAAKK,UAAU,CAAER,SAAQM,WAC/CZ,EAAEe,cAAcC,YAAY,WAAY,WAAYH,MAE/CP,I,WCeEW,MAhCf,WACE,IAAMC,EAAYC,iBAA0B,MAiB5C,ODKItB,IACFA,EAAS,IAAIC,GCrBfsB,qBAAU,WAER,GAAIF,EAAUG,QAId,IAAMC,EAAWC,aAAY,WACtBtB,OAAeuB,sBAIpBC,cAAcH,GACbrB,OAAeuB,oBAAoBN,EAAUG,QAAUpB,OAAeyB,gBACtE,OACF,CAACR,IAEF,wCAEE,wBACES,IAAKT,EACLU,GAAG,eACHC,MAAM,MACNC,OAAO,MACPC,MAAO,CAAEF,MAAO,QAASC,OAAQ,QAASE,OAAQ,iBCzB1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f0c0ae5.chunk.js","sourcesContent":["import { Signer } from \"@ethersproject/abstract-signer\";\r\n\r\nexport class ThirdWebGateway {\r\n  private signer: Signer | null = null;\r\n\r\n  setSigner(signer: Signer) {\r\n    this.signer = signer;\r\n  }\r\n\r\n  loggedIn(payload: JSON): Promise<boolean> {\r\n    return Promise.resolve(false);\r\n  }\r\n\r\n  invokeRoute(route: string, payload: JSON): Promise<any> {\r\n    if(route === \"thirdweb.logged_in\") {\r\n      return this.loggedIn(payload);\r\n    }\r\n    throw new Error(\"uknown route\");\r\n  }\r\n}","import { useEffect } from \"react\";\r\nimport { v4 } from 'uuid';\r\nimport { ThirdWebGateway } from \"./thirdweb\";\r\n\r\nlet bridge: Unity | null = null;\r\n\r\nclass Unity {\r\n  private thirdWeb: ThirdWebGateway\r\n\r\n  constructor() {\r\n    this.thirdWeb = new ThirdWebGateway();\r\n    const w = (window as any);\r\n    w.unity = {};\r\n    w.unity.invoke = (route: string, payload: string) => {\r\n      console.log(\"invoke called\", route, payload);\r\n      const ack_id = v4();\r\n      this.thirdWeb.invokeRoute(route, JSON.parse(payload)).then(result => {\r\n        console.log(\"invoke route result\");\r\n        const returnPayload = JSON.stringify({ ack_id, result });\r\n        w.unityInstance.SendMessage(\"ThirdWeb\", \"Callback\", returnPayload);\r\n      });\r\n      return ack_id;\r\n    };\r\n  }\r\n}\r\n\r\nexport function useUnity() {\r\n  if(!bridge) {\r\n    bridge = new Unity();\r\n  }\r\n  return bridge;\r\n}","import { ConnectWallet } from \"@3rdweb/react\";\nimport { useEffect, useRef } from \"react\";\nimport { useUnity } from \"./gateway/unity\";\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useUnity();\n  useEffect(() => {\n\n    if(!canvasRef.current) {\n      return;\n    }\n\n    const interval = setInterval(() => {\n      if(!(window as any).createUnityInstance) {\n        return;\n      }\n\n      clearInterval(interval);\n      (window as any).createUnityInstance(canvasRef.current, (window as any).unityConfig);\n    }, 500);\n  }, [canvasRef]);\n  return (\n    <div>\n      hello\n      <canvas\n        ref={canvasRef}\n        id=\"unity-canvas\"\n        width=\"960\"\n        height=\"600\"\n        style={{ width: \"960px\", height: \"600px\", cursor: \"default\" }}\n      ></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}