{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","canvasRef","useRef","bridge","ThirdwebBridgeSDK","useEffect","current","interval","setInterval","window","createUnityInstance","clearInterval","unityConfig","then","unityInstance","onClickMagicLogin","useCallback","a","magic","Magic","network","chainId","rpcUrl","auth","loginWithMagicLink","email","provider","ethers","providers","Web3Provider","rpcProvider","signer","getSigner","setProviderOrSigner","console","getAddress","log","onClick","ref","id","width","height","style","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAoEeA,MA/Df,WACE,IAAMC,EAAYC,iBAA0B,MAGtCC,EAASD,iBACb,IAAIE,oBAAkB,sCAIxBC,qBAAU,WACR,GAAKJ,EAAUK,QAIf,IAAMC,EAAWC,aAAY,WACrBC,OAAeC,sBAGrBC,cAAcJ,GACbE,OACEC,oBAAoBT,EAAUK,QAAUG,OAAeG,aACvDC,MAAK,SAACC,GACJL,OAAeK,cAAgBA,QAEnC,OACF,CAACb,IAGJ,IAAMc,EAAoBC,sBAAW,sBAAC,gCAAAC,EAAA,6DAE9BC,EAAQ,IAAIC,IAAM,0BAA2B,CACjDC,QAAS,CACPC,QAAS,MACTC,OAAQ,uCALwB,SAQ9BJ,EAAMK,KAAKC,mBAAmB,CAAEC,MAAO,sBART,cAW9BC,EAAW,IAAIC,IAAOC,UAAUC,aACpCX,EAAMY,aAEFC,EAASL,EAASM,YAExB7B,EAAOG,QAAQ2B,oBAAoBF,GAhBC,KAkBpCG,QAlBoC,SAkBGH,EAAOI,aAlBV,wBAkB5BC,IAlB4B,UAkBxB,oBAlBwB,kDAmBnC,IAEH,OACE,gCACE,wBAAQC,QAAStB,EAAjB,qCACA,wBACEuB,IAAKrC,EACLsC,GAAG,eACHC,MAAM,MACNC,OAAO,MACPC,MAAO,CAAEF,MAAO,QAASC,OAAQ,QAASE,OAAQ,iBCzD1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.57ece2e4.chunk.js","sourcesContent":["import { ThirdwebBridgeSDK } from \"@3rdweb/unity-bridge\";\r\nimport { ethers } from \"ethers\";\r\nimport { Magic } from \"magic-sdk\";\r\nimport { useCallback, useEffect, useRef } from \"react\";\r\n\r\nfunction App() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // Initialize ThirdwebBridgeSDK with an RPC url\r\n  const bridge = useRef<ThirdwebBridgeSDK>(\r\n    new ThirdwebBridgeSDK(\"https://rpc-mumbai.maticvigil.com\")\r\n  );\r\n\r\n  // Setting up Unity bridge instance\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      if (!(window as any).createUnityInstance) {\r\n        return;\r\n      }\r\n      clearInterval(interval);\r\n      (window as any)\r\n        .createUnityInstance(canvasRef.current, (window as any).unityConfig)\r\n        .then((unityInstance: any) => {\r\n          (window as any).unityInstance = unityInstance;\r\n        });\r\n    }, 500);\r\n  }, [canvasRef]);\r\n\r\n  // Connect to magic.link or Metamask and setup ThirdwebSDK.\r\n  const onClickMagicLogin = useCallback(async () => {\r\n    // login with email (magic.link)\r\n    const magic = new Magic(\"<MAGIC_PUBLISHABLE_KEY>\", {\r\n      network: {\r\n        chainId: 80001,\r\n        rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n      },\r\n    });\r\n    await magic.auth.loginWithMagicLink({ email: \"example@email.com\" });\r\n\r\n    // update the signer on thirdweb sdk\r\n    const provider = new ethers.providers.Web3Provider(\r\n      magic.rpcProvider as any\r\n    );\r\n    const signer = provider.getSigner();\r\n    // bridge.current because of useRef\r\n    bridge.current.setProviderOrSigner(signer);\r\n\r\n    console.log(\"logged in address\", await signer.getAddress());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onClickMagicLogin}>Connect with magic.link</button>\r\n      <canvas\r\n        ref={canvasRef}\r\n        id=\"unity-canvas\"\r\n        width=\"960\"\r\n        height=\"600\"\r\n        style={{ width: \"960px\", height: \"600px\", cursor: \"default\" }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}